define(["SocketClient","Util","Navi","Debug"],function(t,e,n,r){var i=function(){this._ws=new t,this._requests=0,this._responseCallbacks={},this._id=null,this._isMaster=!1};return i.prototype.init=function(){var t=this;return this._ws.bind(this._ws.Event.OPEN_REQUESTED,function(t){r.log("! Requesting test client connection",t.config)}),this._ws.bind(this._ws.Event.OPENED,function(){r.log("+ Test client connection opened"),t._registerListeners()}),this._ws.bind(this._ws.Event.CLOSED,function(){r.log("- Test client connection closed")}),this._ws.bind(this._ws.Event.MESSAGE_RECEIVED,function(e){t._onMessageReceived(e.data)}),this},i.prototype.open=function(t,e){this._ws.setReconnectAttempts(0),this._ws.open(t,e)},i.prototype.becomeMaster=function(){this.request("becomeMaster")},i.prototype.request=function(t,n,r){n=n||{};var i=this._requests++,o={id:i,handler:t,parameters:n,expectResponse:e.isFunction(r)};e.isFunction(r)&&(this._responseCallbacks[i]=r),this._ws.send(JSON.stringify(o))},i.prototype._registerListeners=function(){var t=this;n.bind(n.Event.PRE_NAVIGATE,function(e){t._isMaster&&t.request("navigate",{action:e.action,module:e.module,parameters:e.parameters})})},i.prototype._onMessageReceived=function(t){if("{"!==t.substr(0,1))return console.log("Unknown test client message",t),void 0;var e=JSON.parse(t);switch(e.type){case"setup":this._handleSetup(e);break;case"request":this._handleRequest(e);break;case"response":this._handleResponse(e)}},i.prototype._handleSetup=function(t){r.log("! Test client setup received",t),this._id=t.id,this._isMasterId=t.masterId,this._isMaster=t.masterId==this._id},i.prototype._handleRequest=function(t){switch(r.log("< Test client request",t),t.action){case"navigate":this._handleNavigateRequest(t.parameters);break;case"refresh":break;default:throw Error("Unsupported request action: "+t.action)}},i.prototype._handleNavigateRequest=function(t){n.open(t.module,t.action,t.parameters)},i.prototype._handleResponse=function(t){e.isFunction(this._responseCallbacks[t.requestId])&&this._responseCallbacks[t.requestId].call(this._responseCallbacks[t.requestId],t.data)},new i});